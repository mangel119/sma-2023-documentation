"use strict";(self.webpackChunksma_2023_01=self.webpackChunksma_2023_01||[]).push([[58],{3905:(e,a,t)=>{t.d(a,{Zo:()=>c,kt:()=>b});var r=t(7294);function n(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);a&&(r=r.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){n(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function i(e,a){if(null==e)return{};var t,r,n=function(e,a){if(null==e)return{};var t,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||(n[t]=e[t]);return n}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var l=r.createContext({}),u=function(e){var a=r.useContext(l),t=a;return e&&(t="function"==typeof e?e(a):s(s({},a),e)),t},c=function(e){var a=u(e.components);return r.createElement(l.Provider,{value:a},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var a=e.children;return r.createElement(r.Fragment,{},a)}},p=r.forwardRef((function(e,a){var t=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(t),p=n,b=d["".concat(l,".").concat(p)]||d[p]||m[p]||o;return t?r.createElement(b,s(s({ref:a},c),{},{components:t})):r.createElement(b,s({ref:a},c))}));function b(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var o=t.length,s=new Array(o);s[0]=p;var i={};for(var l in a)hasOwnProperty.call(a,l)&&(i[l]=a[l]);i.originalType=e,i[d]="string"==typeof e?e:n,s[1]=i;for(var u=2;u<o;u++)s[u]=t[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8795:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>I,contentTitle:()=>j,default:()=>S,frontMatter:()=>T,metadata:()=>q,toc:()=>O});var r=t(7462),n=t(7294),o=t(3905),s=t(6010),i=t(2466),l=t(6550),u=t(1980),c=t(7392),d=t(12);function m(e){return function(e){return n.Children.map(e,(e=>{if((0,n.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:a,label:t,attributes:r,default:n}}=e;return{value:a,label:t,attributes:r,default:n}}))}function p(e){const{values:a,children:t}=e;return(0,n.useMemo)((()=>{const e=a??m(t);return function(e){const a=(0,c.l)(e,((e,a)=>e.value===a.value));if(a.length>0)throw new Error(`Docusaurus error: Duplicate values "${a.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[a,t])}function b(e){let{value:a,tabValues:t}=e;return t.some((e=>e.value===a))}function g(e){let{queryString:a=!1,groupId:t}=e;const r=(0,l.k6)(),o=function(e){let{queryString:a=!1,groupId:t}=e;if("string"==typeof a)return a;if(!1===a)return null;if(!0===a&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:a,groupId:t});return[(0,u._X)(o),(0,n.useCallback)((e=>{if(!o)return;const a=new URLSearchParams(r.location.search);a.set(o,e),r.replace({...r.location,search:a.toString()})}),[o,r])]}function f(e){const{defaultValue:a,queryString:t=!1,groupId:r}=e,o=p(e),[s,i]=(0,n.useState)((()=>function(e){let{defaultValue:a,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(a){if(!b({value:a,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${a}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return a}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:a,tabValues:o}))),[l,u]=g({queryString:t,groupId:r}),[c,m]=function(e){let{groupId:a}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(a),[r,o]=(0,d.Nk)(t);return[r,(0,n.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),f=(()=>{const e=l??c;return b({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:s,selectValue:(0,n.useCallback)((e=>{if(!b({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);i(e),u(e),m(e)}),[u,m,o]),tabValues:o}}var h=t(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:a,block:t,selectedValue:o,selectValue:l,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,i.o5)(),m=e=>{const a=e.currentTarget,t=c.indexOf(a),r=u[t].value;r!==o&&(d(a),l(r))},p=e=>{let a=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;a=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;a=c[t]??c[c.length-1];break}}a?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":t},a)},u.map((e=>{let{value:a,label:t,attributes:i}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:o===a?0:-1,"aria-selected":o===a,key:a,ref:e=>c.push(e),onKeyDown:p,onClick:m},i,{className:(0,s.Z)("tabs__item",k.tabItem,i?.className,{"tabs__item--active":o===a})}),t??a)})))}function y(e){let{lazy:a,children:t,selectedValue:r}=e;if(t=Array.isArray(t)?t:[t],a){const e=t.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},t.map(((e,a)=>(0,n.cloneElement)(e,{key:a,hidden:e.props.value!==r}))))}function N(e){const a=f(e);return n.createElement("div",{className:(0,s.Z)("tabs-container",k.tabList)},n.createElement(v,(0,r.Z)({},e,a)),n.createElement(y,(0,r.Z)({},e,a)))}function w(e){const a=(0,h.Z)();return n.createElement(N,(0,r.Z)({key:String(a)},e))}const E={tabItem:"tabItem_Ymn6"};function x(e){let{children:a,hidden:t,className:r}=e;return n.createElement("div",{role:"tabpanel",className:(0,s.Z)(E.tabItem,r),hidden:t},a)}const T={sidebar_position:2},j="Branching",q={unversionedId:"conceptos/branching",id:"conceptos/branching",title:"Branching",description:"En Git las Ramas son espacios o entornos independientes para que un Desarrollador sea Back-end, Front-end, Tester, etc. pueda usar y as\xed trabajar sobre un mismo proyecto sin da\xf1ar o borrar el conjunto de archivos originales del proyecto, d\xe1ndonos flexibilidad para desarrollar nuestro proyecto de manera m\xe1s organizada.",source:"@site/docs/conceptos/branching.mdx",sourceDirName:"conceptos",slug:"/conceptos/branching",permalink:"/sma-2023-documentation/docs/conceptos/branching",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/conceptos/branching.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"GIT",permalink:"/sma-2023-documentation/docs/conceptos/git"},next:{title:"Merging",permalink:"/sma-2023-documentation/docs/conceptos/merging"}},I={},O=[{value:"\xbfQu\xe9 es una estrategia de Branching?",id:"qu\xe9-es-una-estrategia-de-branching",level:2},{value:"Estrategia de Branching: Github Flow",id:"estrategia-de-branching-github-flow",level:2}],V={toc:O},P="wrapper";function S(e){let{components:a,...t}=e;return(0,o.kt)(P,(0,r.Z)({},V,t,{components:a,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"branching"},"Branching"),(0,o.kt)("p",null,"En Git las Ramas son ",(0,o.kt)("strong",{parentName:"p"},"espacios")," o ",(0,o.kt)("strong",{parentName:"p"},"entornos independientes")," para que un Desarrollador sea Back-end, Front-end, Tester, etc. pueda usar y as\xed trabajar sobre un mismo proyecto sin da\xf1ar o borrar el conjunto de archivos originales del proyecto, ",(0,o.kt)("strong",{parentName:"p"},"d\xe1ndonos flexibilidad para desarrollar nuestro proyecto de manera m\xe1s organizada"),"."),(0,o.kt)("p",null,"Para mayor informaci\xf3n sobre las ramas puedes revisar la documentaci\xf3n que se encuentra en ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://docs.github.com/es/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-branches"},"Github")),"."),(0,o.kt)("h2",{id:"qu\xe9-es-una-estrategia-de-branching"},"\xbfQu\xe9 es una estrategia de Branching?"),(0,o.kt)("p",null,"Es una ",(0,o.kt)("strong",{parentName:"p"},"serie de reglas")," que aplica un equipo de desarrollo de software cuando necesita escribir un c\xf3digo para ",(0,o.kt)("strong",{parentName:"p"},"incorporar una nueva funcionalidad")," o ",(0,o.kt)("strong",{parentName:"p"},"hacer una correcci\xf3n"),", fusionarlo y enviarlo al repositorio donde se encuentra alojado el resto del c\xf3digo del software en uso, por ejemplo, en un sistema de control de versiones como Git."),(0,o.kt)("p",null,"Los desarrolladores de software que trabajan en equipo en la misma base de c\xf3digo deben compartir sus cambios entre s\xed. Pero, \xbfc\xf3mo pueden hacer esto de manera eficiente mientras evitan inconsistencias en el software?."),(0,o.kt)("p",null,"El objetivo de cualquier estrategia de branching es resolver precisamente ese problema, permitir que los equipos que trabajan juntos en la misma base de c\xf3digo fuente no afecten su c\xf3digo los unos a los otros."),(0,o.kt)("h2",{id:"estrategia-de-branching-github-flow"},"Estrategia de Branching: Github Flow"),(0,o.kt)("p",null,"La estrategia de Branching que se defini\xf3 para el proyecto es ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://docs.github.com/es/get-started/quickstart/github-flow"},"GitHub Flow")),". Esta se basa en un flujo de trabajo basado en branches que permite a equipos de desarrollo enfocarse principalmente en la ",(0,o.kt)("strong",{parentName:"p"},"entrega continua"),"."),(0,o.kt)("p",null,"Esta estrategia est\xe1 basada principalmente en ",(0,o.kt)("strong",{parentName:"p"},"dos branches")," que tienen una vida infinita"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"main")," Es usada para prop\xf3sitos de producci\xf3n. Contiene el c\xf3digo de la aplicaci\xf3n tal y c\xf3mo se le entregar\xe1 al usuario."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"dev")," Es donde ocurre todo el trabajo de desarrollo, a partir de esta rama se crean las subramas o ramas adicionales. Una vez se ha testeado y asegurado de que no tenga errores, mandamos los cambios a producci\xf3n en la rama ",(0,o.kt)("strong",{parentName:"li"},"main"))),(0,o.kt)("mermaid",{value:"%%{init: {'theme': 'base' , 'themeVariables': {\n              'git0': '#fd79a8',\n              'git1': '#a29bfe'} } }%%\ngitGraph\n   commit\n   branch dev\n   checkout dev\n   commit\n   commit\n   checkout main\n   merge dev\n   checkout dev\n   commit\n   commit\n   checkout main\n   merge dev"}),(0,o.kt)("p",null,"Adicionalmente en esta estrategia se utilizan otros dos tipos de ramas adicionales que llamaremos ",(0,o.kt)("strong",{parentName:"p"},"subramas"),". Estas subramas ",(0,o.kt)("strong",{parentName:"p"},"son creadas por los desarrolladores"),", y tienen un ciclo de vida temporal, una vez se han fusionado con la rama ",(0,o.kt)("strong",{parentName:"p"},"dev")," estas deben ser eliminadas."),(0,o.kt)("p",null,"En estas ",(0,o.kt)("strong",{parentName:"p"},"subramas")," los desarrolladores deben hacer las ",(0,o.kt)("strong",{parentName:"p"},"pruebas unitarias")," antes de mandarlas a ser revisadas por ",(0,o.kt)("strong",{parentName:"p"},"Infraestructura"),"."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"feature")," Se crea a partir de ",(0,o.kt)("strong",{parentName:"li"},"develop")," cuando una nueva funcionalidad necesita ser desarrollada. Al finalizar el desarrollo se hace merge a ",(0,o.kt)("strong",{parentName:"li"},"develop")," nuevamente."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"hotfix")," Se crea a partir de ",(0,o.kt)("strong",{parentName:"li"},"main")," cuando es necesario corregir un error detectado en producci\xf3n de manera urgente. Al finalizar el desarrollo se hace merge a ",(0,o.kt)("strong",{parentName:"li"},"develop")," y luego nuevamente a ",(0,o.kt)("strong",{parentName:"li"},"main"),".")),(0,o.kt)("mermaid",{value:"%%{init: {'theme': 'base' , 'themeVariables': {\n              'git0': '#fd79a8',\n              'git1': '#a29bfe'} } }%%\ngitGraph\n   commit\n   branch dev\n   checkout dev\n   commit\n   branch feature\n   checkout feature\n   commit\n   checkout dev\n   commit\n   checkout feature\n   commit\n   checkout dev\n   merge feature\n   checkout main\n   merge dev\n   commit\n   branch hotfix\n   checkout hotfix\n   commit\n   checkout dev\n   merge hotfix\n   commit\n   commit\n   checkout main\n   merge dev"}),(0,o.kt)("admonition",{title:"\xa1Informaci\xf3n Importante!",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Los desarrolladores son los que crean sus ramas dependiendo del ",(0,o.kt)("strong",{parentName:"p"},"feature")," o del ",(0,o.kt)("strong",{parentName:"p"},"hotfix")," en el cual se encuentren trabajando. Al momento de crearlas estas deben seguir unas reglas con el nombre:"),(0,o.kt)(w,{groupId:"nomenclatura",mdxType:"Tabs"},(0,o.kt)(x,{value:"feat",label:"Feature Nomenclatura",mdxType:"TabItem"},"feature/module_nombre-de-la-funcionalidad"),(0,o.kt)(x,{value:"fix",label:"Hotfix Nomenclatura",mdxType:"TabItem"},"hotfix/module_nombre-del-error")),(0,o.kt)(w,{groupId:"nomenclatura",mdxType:"Tabs"},(0,o.kt)(x,{value:"feat",label:"Feature Ejemplo",mdxType:"TabItem"},"feature/estudiante_informacion-del-curso"),(0,o.kt)(x,{value:"fix",label:"Hotfix Ejemplo",mdxType:"TabItem"},"hotfix/chat_ajuste-color-fuente")),(0,o.kt)("p",{parentName:"admonition"},"(",(0,o.kt)("em",{parentName:"p"},"module")," es el \xe1rea en el cual se est\xe1 trabajando la ",(0,o.kt)("strong",{parentName:"p"},"feature")," o el ",(0,o.kt)("strong",{parentName:"p"},"hotfix"),". Estas \xe1reas son: estudiante, profesor, ia, chat, general, infraestructure)")))}S.isMDXComponent=!0}}]);